class Solution {
    public int binarySearch(int[] nums){
         int low = 0, high = nums.length - 1;
        // if the array is not rotaed that means 0th position is our answer
        if(nums[low] <= nums[high])return nums[low];
        while(low <= high){
            int mid = (low + high)/ 2;
            if(mid + 1 < nums.length && nums[mid + 1] < nums[mid])return nums[mid + 1];
            else if(mid - 1 >= 0 && nums[mid] < nums[mid - 1])return nums[mid];
            else if(nums[mid] >= nums[low]) low = mid + 1;
            else high = mid - 1;
        }
        return -1;
    }
    public int findMin(int[] nums) {
       return binarySearch(nums);
    }
}
