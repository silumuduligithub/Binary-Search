class Solution {
    public int findPeakElement(MountainArray arr){
        int low = 0, high = arr.length() - 1;
        while(low <= high){
            int mid = (low + high) / 2;
            // first check am the peak if i am present left most side
            if(mid == 0){
                if(arr.get(mid) > arr.get(mid + 1)){
                    return mid;
                }else{
                    low = mid + 1;
                }
            }
            // am i the peak and i am present right most part of the array
           else if(mid == arr.length() - 1){
                if(arr.get(mid) > arr.get(mid - 1)){
                    return mid;
                }
                else{
                    high = mid - 1;
                } 
            }
            else{
                if(arr.get(mid) > arr.get(mid - 1) && arr.get(mid) > arr.get(mid + 1)){
                    return mid;
                }else if(arr.get(mid - 1) <= arr.get(mid)){
                    low = mid + 1;
                }else{
                    high = mid - 1;
                }
            }
        }
        return -1;
    }
    public int binarySearch1(int low, int high, int target, MountainArray arr){
        int ans = -1;
        while(low <= high){
            int mid = (low + high) / 2;
            if(arr.get(mid) == target){
                ans = mid;
                high = mid - 1;
            }else if(arr.get(mid) > target){
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return ans;
    }
     public int binarySearch2(int low, int high, int target, MountainArray arr){
        int ans = -1;
        while(low <= high){
            int mid = (low + high) / 2;
            if(arr.get(mid) == target){
                ans = mid;
                high = mid - 1;
            }else if(arr.get(mid) > target){
                low = mid + 1;
            }else{
                high = mid - 1;
            }
        }
        return ans;
    }
    public int findInMountainArray(int target, MountainArray mountainArr) {
        int peak = findPeakElement(mountainArr);
        if(mountainArr.get(peak) == target)return peak;
        if(mountainArr.get(peak) < target)return - 1;
        int ans = binarySearch1(0, peak, target, mountainArr);
        System.out.println(peak);
        if(ans != -1)return ans;
        return binarySearch2(peak + 1, mountainArr.length() - 1, target, mountainArr);
    }
}
