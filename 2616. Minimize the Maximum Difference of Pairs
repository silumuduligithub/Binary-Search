class Solution {
    public boolean isPossible(int[] nums, int mid, int p){
        boolean flag = false;
        int count = 0;
        for(int i = 1; i < nums.length; i++){
            if(flag){
                flag = false;
                continue;
            }
            int diff = nums[i] - nums[i - 1];
            if(diff <= mid){
                flag = true;
                count++;
            }
        }
        return count >= p;
    }
    public int minimizeMax(int[] nums, int p) {
        Arrays.sort(nums);
        int lo = 0, hi = nums[nums.length - 1] - nums[0];
        int ans = - 1;
        while(lo <= hi){
            int mid = (lo + hi) / 2;
            if(isPossible(nums, mid, p)){
                ans = mid;
                hi = mid - 1;
            }else{
                lo = mid + 1;
            }
        }
        return ans;
    }
}
